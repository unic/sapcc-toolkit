plugins {
	id 'org.springframework.boot' version '2.6.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'maven-publish'
    id 'jacoco'
    id 'org.sonarqube' version '3.4.0.2513'
}

group = 'com.unic.sapcc.toolkit'
version = '0.0.3'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
	mavenCentral()
}

publishing {
	publications {
		sapccToolkit(MavenPublication) {
			artifact bootJar
		}
	}
	repositories {
		maven {
			name = 'unicEcom'
			credentials(PasswordCredentials)
			url 'https://nexus.unic.com/nexus/repository/unic-ecom-' + (version.toString().endsWith('-SNAPSHOT') ? 'snapshots' : 'releases')
		}
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'junit:junit:4.13.2'
    implementation 'commons-cli:commons-cli:1.5.0'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework:spring-aspects'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "unic_sapcc-toolkit"
        property "sonar.organization", "unic"
        property "sonar.host.url", "https://sonarcloud.io"
        property 'sonar.projectVersion', "$project.version"
    }
}

def gitBranch() {
    def branch = ""
    def proc = "git rev-parse --abbrev-ref HEAD".execute()
    proc.in.eachLine { line -> branch = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    branch
}
